//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalLocationObservation) DeepCopyInto(out *AdditionalLocationObservation) {
	*out = *in
	if in.GatewayRegionalURL != nil {
		in, out := &in.GatewayRegionalURL, &out.GatewayRegionalURL
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddresses != nil {
		in, out := &in.PrivateIPAddresses, &out.PrivateIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PublicIPAddresses != nil {
		in, out := &in.PublicIPAddresses, &out.PublicIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalLocationObservation.
func (in *AdditionalLocationObservation) DeepCopy() *AdditionalLocationObservation {
	if in == nil {
		return nil
	}
	out := new(AdditionalLocationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdditionalLocationParameters) DeepCopyInto(out *AdditionalLocationParameters) {
	*out = *in
	if in.Capacity != nil {
		in, out := &in.Capacity, &out.Capacity
		*out = new(float64)
		**out = **in
	}
	if in.GatewayDisabled != nil {
		in, out := &in.GatewayDisabled, &out.GatewayDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.VirtualNetworkConfiguration != nil {
		in, out := &in.VirtualNetworkConfiguration, &out.VirtualNetworkConfiguration
		*out = make([]VirtualNetworkConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdditionalLocationParameters.
func (in *AdditionalLocationParameters) DeepCopy() *AdditionalLocationParameters {
	if in == nil {
		return nil
	}
	out := new(AdditionalLocationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateObservation) DeepCopyInto(out *CertificateObservation) {
	*out = *in
	if in.Expiry != nil {
		in, out := &in.Expiry, &out.Expiry
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateObservation.
func (in *CertificateObservation) DeepCopy() *CertificateObservation {
	if in == nil {
		return nil
	}
	out := new(CertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CertificateParameters) DeepCopyInto(out *CertificateParameters) {
	*out = *in
	if in.CertificatePasswordSecretRef != nil {
		in, out := &in.CertificatePasswordSecretRef, &out.CertificatePasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	out.EncodedCertificateSecretRef = in.EncodedCertificateSecretRef
	if in.StoreName != nil {
		in, out := &in.StoreName, &out.StoreName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CertificateParameters.
func (in *CertificateParameters) DeepCopy() *CertificateParameters {
	if in == nil {
		return nil
	}
	out := new(CertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperPortalObservation) DeepCopyInto(out *DeveloperPortalObservation) {
	*out = *in
	if in.CertificateSource != nil {
		in, out := &in.CertificateSource, &out.CertificateSource
		*out = new(string)
		**out = **in
	}
	if in.CertificateStatus != nil {
		in, out := &in.CertificateStatus, &out.CertificateStatus
		*out = new(string)
		**out = **in
	}
	if in.Expiry != nil {
		in, out := &in.Expiry, &out.Expiry
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.NegotiateClientCertificate != nil {
		in, out := &in.NegotiateClientCertificate, &out.NegotiateClientCertificate
		*out = new(bool)
		**out = **in
	}
	if in.SSLKeyvaultIdentityClientID != nil {
		in, out := &in.SSLKeyvaultIdentityClientID, &out.SSLKeyvaultIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperPortalObservation.
func (in *DeveloperPortalObservation) DeepCopy() *DeveloperPortalObservation {
	if in == nil {
		return nil
	}
	out := new(DeveloperPortalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeveloperPortalParameters) DeepCopyInto(out *DeveloperPortalParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeveloperPortalParameters.
func (in *DeveloperPortalParameters) DeepCopy() *DeveloperPortalParameters {
	if in == nil {
		return nil
	}
	out := new(DeveloperPortalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostNameConfigurationManagementObservation) DeepCopyInto(out *HostNameConfigurationManagementObservation) {
	*out = *in
	if in.CertificateSource != nil {
		in, out := &in.CertificateSource, &out.CertificateSource
		*out = new(string)
		**out = **in
	}
	if in.CertificateStatus != nil {
		in, out := &in.CertificateStatus, &out.CertificateStatus
		*out = new(string)
		**out = **in
	}
	if in.Expiry != nil {
		in, out := &in.Expiry, &out.Expiry
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.NegotiateClientCertificate != nil {
		in, out := &in.NegotiateClientCertificate, &out.NegotiateClientCertificate
		*out = new(bool)
		**out = **in
	}
	if in.SSLKeyvaultIdentityClientID != nil {
		in, out := &in.SSLKeyvaultIdentityClientID, &out.SSLKeyvaultIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostNameConfigurationManagementObservation.
func (in *HostNameConfigurationManagementObservation) DeepCopy() *HostNameConfigurationManagementObservation {
	if in == nil {
		return nil
	}
	out := new(HostNameConfigurationManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostNameConfigurationManagementParameters) DeepCopyInto(out *HostNameConfigurationManagementParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostNameConfigurationManagementParameters.
func (in *HostNameConfigurationManagementParameters) DeepCopy() *HostNameConfigurationManagementParameters {
	if in == nil {
		return nil
	}
	out := new(HostNameConfigurationManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostNameConfigurationObservation) DeepCopyInto(out *HostNameConfigurationObservation) {
	*out = *in
	if in.DeveloperPortal != nil {
		in, out := &in.DeveloperPortal, &out.DeveloperPortal
		*out = make([]DeveloperPortalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Management != nil {
		in, out := &in.Management, &out.Management
		*out = make([]HostNameConfigurationManagementObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Portal != nil {
		in, out := &in.Portal, &out.Portal
		*out = make([]PortalObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Proxy != nil {
		in, out := &in.Proxy, &out.Proxy
		*out = make([]ProxyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scm != nil {
		in, out := &in.Scm, &out.Scm
		*out = make([]ScmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostNameConfigurationObservation.
func (in *HostNameConfigurationObservation) DeepCopy() *HostNameConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(HostNameConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostNameConfigurationParameters) DeepCopyInto(out *HostNameConfigurationParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostNameConfigurationParameters.
func (in *HostNameConfigurationParameters) DeepCopy() *HostNameConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(HostNameConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityObservation) DeepCopyInto(out *IdentityObservation) {
	*out = *in
	if in.PrincipalID != nil {
		in, out := &in.PrincipalID, &out.PrincipalID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityObservation.
func (in *IdentityObservation) DeepCopy() *IdentityObservation {
	if in == nil {
		return nil
	}
	out := new(IdentityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityParameters) DeepCopyInto(out *IdentityParameters) {
	*out = *in
	if in.IdentityIds != nil {
		in, out := &in.IdentityIds, &out.IdentityIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityParameters.
func (in *IdentityParameters) DeepCopy() *IdentityParameters {
	if in == nil {
		return nil
	}
	out := new(IdentityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Management) DeepCopyInto(out *Management) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Management.
func (in *Management) DeepCopy() *Management {
	if in == nil {
		return nil
	}
	out := new(Management)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Management) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementList) DeepCopyInto(out *ManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Management, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementList.
func (in *ManagementList) DeepCopy() *ManagementList {
	if in == nil {
		return nil
	}
	out := new(ManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementObservation) DeepCopyInto(out *ManagementObservation) {
	*out = *in
	if in.AdditionalLocation != nil {
		in, out := &in.AdditionalLocation, &out.AdditionalLocation
		*out = make([]AdditionalLocationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DeveloperPortalURL != nil {
		in, out := &in.DeveloperPortalURL, &out.DeveloperPortalURL
		*out = new(string)
		**out = **in
	}
	if in.GatewayRegionalURL != nil {
		in, out := &in.GatewayRegionalURL, &out.GatewayRegionalURL
		*out = new(string)
		**out = **in
	}
	if in.GatewayURL != nil {
		in, out := &in.GatewayURL, &out.GatewayURL
		*out = new(string)
		**out = **in
	}
	if in.HostNameConfiguration != nil {
		in, out := &in.HostNameConfiguration, &out.HostNameConfiguration
		*out = make([]HostNameConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagementAPIURL != nil {
		in, out := &in.ManagementAPIURL, &out.ManagementAPIURL
		*out = new(string)
		**out = **in
	}
	if in.PortalURL != nil {
		in, out := &in.PortalURL, &out.PortalURL
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPAddresses != nil {
		in, out := &in.PrivateIPAddresses, &out.PrivateIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PublicIPAddresses != nil {
		in, out := &in.PublicIPAddresses, &out.PublicIPAddresses
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScmURL != nil {
		in, out := &in.ScmURL, &out.ScmURL
		*out = new(string)
		**out = **in
	}
	if in.TenantAccess != nil {
		in, out := &in.TenantAccess, &out.TenantAccess
		*out = make([]TenantAccessObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementObservation.
func (in *ManagementObservation) DeepCopy() *ManagementObservation {
	if in == nil {
		return nil
	}
	out := new(ManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementParameters) DeepCopyInto(out *ManagementParameters) {
	*out = *in
	if in.AdditionalLocation != nil {
		in, out := &in.AdditionalLocation, &out.AdditionalLocation
		*out = make([]AdditionalLocationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = make([]CertificateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClientCertificateEnabled != nil {
		in, out := &in.ClientCertificateEnabled, &out.ClientCertificateEnabled
		*out = new(bool)
		**out = **in
	}
	if in.GatewayDisabled != nil {
		in, out := &in.GatewayDisabled, &out.GatewayDisabled
		*out = new(bool)
		**out = **in
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = make([]IdentityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MinAPIVersion != nil {
		in, out := &in.MinAPIVersion, &out.MinAPIVersion
		*out = new(string)
		**out = **in
	}
	if in.NotificationSenderEmail != nil {
		in, out := &in.NotificationSenderEmail, &out.NotificationSenderEmail
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = make([]PolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocols != nil {
		in, out := &in.Protocols, &out.Protocols
		*out = make([]ProtocolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PublicIPAddressID != nil {
		in, out := &in.PublicIPAddressID, &out.PublicIPAddressID
		*out = new(string)
		**out = **in
	}
	if in.PublicNetworkAccessEnabled != nil {
		in, out := &in.PublicNetworkAccessEnabled, &out.PublicNetworkAccessEnabled
		*out = new(bool)
		**out = **in
	}
	if in.PublisherEmail != nil {
		in, out := &in.PublisherEmail, &out.PublisherEmail
		*out = new(string)
		**out = **in
	}
	if in.PublisherName != nil {
		in, out := &in.PublisherName, &out.PublisherName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupNameRef != nil {
		in, out := &in.ResourceGroupNameRef, &out.ResourceGroupNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ResourceGroupNameSelector != nil {
		in, out := &in.ResourceGroupNameSelector, &out.ResourceGroupNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Security != nil {
		in, out := &in.Security, &out.Security
		*out = make([]SecurityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignIn != nil {
		in, out := &in.SignIn, &out.SignIn
		*out = make([]SignInParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SignUp != nil {
		in, out := &in.SignUp, &out.SignUp
		*out = make([]SignUpParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SkuName != nil {
		in, out := &in.SkuName, &out.SkuName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TenantAccess != nil {
		in, out := &in.TenantAccess, &out.TenantAccess
		*out = make([]TenantAccessParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualNetworkConfiguration != nil {
		in, out := &in.VirtualNetworkConfiguration, &out.VirtualNetworkConfiguration
		*out = make([]ManagementVirtualNetworkConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualNetworkType != nil {
		in, out := &in.VirtualNetworkType, &out.VirtualNetworkType
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementParameters.
func (in *ManagementParameters) DeepCopy() *ManagementParameters {
	if in == nil {
		return nil
	}
	out := new(ManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementSpec) DeepCopyInto(out *ManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementSpec.
func (in *ManagementSpec) DeepCopy() *ManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementStatus) DeepCopyInto(out *ManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementStatus.
func (in *ManagementStatus) DeepCopy() *ManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementVirtualNetworkConfigurationObservation) DeepCopyInto(out *ManagementVirtualNetworkConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementVirtualNetworkConfigurationObservation.
func (in *ManagementVirtualNetworkConfigurationObservation) DeepCopy() *ManagementVirtualNetworkConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ManagementVirtualNetworkConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagementVirtualNetworkConfigurationParameters) DeepCopyInto(out *ManagementVirtualNetworkConfigurationParameters) {
	*out = *in
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagementVirtualNetworkConfigurationParameters.
func (in *ManagementVirtualNetworkConfigurationParameters) DeepCopy() *ManagementVirtualNetworkConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ManagementVirtualNetworkConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyObservation) DeepCopyInto(out *PolicyObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyObservation.
func (in *PolicyObservation) DeepCopy() *PolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyParameters) DeepCopyInto(out *PolicyParameters) {
	*out = *in
	if in.XMLContent != nil {
		in, out := &in.XMLContent, &out.XMLContent
		*out = new(string)
		**out = **in
	}
	if in.XMLLink != nil {
		in, out := &in.XMLLink, &out.XMLLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyParameters.
func (in *PolicyParameters) DeepCopy() *PolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortalObservation) DeepCopyInto(out *PortalObservation) {
	*out = *in
	if in.CertificateSource != nil {
		in, out := &in.CertificateSource, &out.CertificateSource
		*out = new(string)
		**out = **in
	}
	if in.CertificateStatus != nil {
		in, out := &in.CertificateStatus, &out.CertificateStatus
		*out = new(string)
		**out = **in
	}
	if in.Expiry != nil {
		in, out := &in.Expiry, &out.Expiry
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.NegotiateClientCertificate != nil {
		in, out := &in.NegotiateClientCertificate, &out.NegotiateClientCertificate
		*out = new(bool)
		**out = **in
	}
	if in.SSLKeyvaultIdentityClientID != nil {
		in, out := &in.SSLKeyvaultIdentityClientID, &out.SSLKeyvaultIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortalObservation.
func (in *PortalObservation) DeepCopy() *PortalObservation {
	if in == nil {
		return nil
	}
	out := new(PortalObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortalParameters) DeepCopyInto(out *PortalParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortalParameters.
func (in *PortalParameters) DeepCopy() *PortalParameters {
	if in == nil {
		return nil
	}
	out := new(PortalParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtocolsObservation) DeepCopyInto(out *ProtocolsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtocolsObservation.
func (in *ProtocolsObservation) DeepCopy() *ProtocolsObservation {
	if in == nil {
		return nil
	}
	out := new(ProtocolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtocolsParameters) DeepCopyInto(out *ProtocolsParameters) {
	*out = *in
	if in.EnableHttp2 != nil {
		in, out := &in.EnableHttp2, &out.EnableHttp2
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtocolsParameters.
func (in *ProtocolsParameters) DeepCopy() *ProtocolsParameters {
	if in == nil {
		return nil
	}
	out := new(ProtocolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyObservation) DeepCopyInto(out *ProxyObservation) {
	*out = *in
	if in.CertificateSource != nil {
		in, out := &in.CertificateSource, &out.CertificateSource
		*out = new(string)
		**out = **in
	}
	if in.CertificateStatus != nil {
		in, out := &in.CertificateStatus, &out.CertificateStatus
		*out = new(string)
		**out = **in
	}
	if in.DefaultSSLBinding != nil {
		in, out := &in.DefaultSSLBinding, &out.DefaultSSLBinding
		*out = new(bool)
		**out = **in
	}
	if in.Expiry != nil {
		in, out := &in.Expiry, &out.Expiry
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.NegotiateClientCertificate != nil {
		in, out := &in.NegotiateClientCertificate, &out.NegotiateClientCertificate
		*out = new(bool)
		**out = **in
	}
	if in.SSLKeyvaultIdentityClientID != nil {
		in, out := &in.SSLKeyvaultIdentityClientID, &out.SSLKeyvaultIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyObservation.
func (in *ProxyObservation) DeepCopy() *ProxyObservation {
	if in == nil {
		return nil
	}
	out := new(ProxyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyParameters) DeepCopyInto(out *ProxyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyParameters.
func (in *ProxyParameters) DeepCopy() *ProxyParameters {
	if in == nil {
		return nil
	}
	out := new(ProxyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmObservation) DeepCopyInto(out *ScmObservation) {
	*out = *in
	if in.CertificateSource != nil {
		in, out := &in.CertificateSource, &out.CertificateSource
		*out = new(string)
		**out = **in
	}
	if in.CertificateStatus != nil {
		in, out := &in.CertificateStatus, &out.CertificateStatus
		*out = new(string)
		**out = **in
	}
	if in.Expiry != nil {
		in, out := &in.Expiry, &out.Expiry
		*out = new(string)
		**out = **in
	}
	if in.HostName != nil {
		in, out := &in.HostName, &out.HostName
		*out = new(string)
		**out = **in
	}
	if in.KeyVaultID != nil {
		in, out := &in.KeyVaultID, &out.KeyVaultID
		*out = new(string)
		**out = **in
	}
	if in.NegotiateClientCertificate != nil {
		in, out := &in.NegotiateClientCertificate, &out.NegotiateClientCertificate
		*out = new(bool)
		**out = **in
	}
	if in.SSLKeyvaultIdentityClientID != nil {
		in, out := &in.SSLKeyvaultIdentityClientID, &out.SSLKeyvaultIdentityClientID
		*out = new(string)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Thumbprint != nil {
		in, out := &in.Thumbprint, &out.Thumbprint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmObservation.
func (in *ScmObservation) DeepCopy() *ScmObservation {
	if in == nil {
		return nil
	}
	out := new(ScmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScmParameters) DeepCopyInto(out *ScmParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScmParameters.
func (in *ScmParameters) DeepCopy() *ScmParameters {
	if in == nil {
		return nil
	}
	out := new(ScmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityObservation) DeepCopyInto(out *SecurityObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityObservation.
func (in *SecurityObservation) DeepCopy() *SecurityObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityParameters) DeepCopyInto(out *SecurityParameters) {
	*out = *in
	if in.EnableBackendSsl30 != nil {
		in, out := &in.EnableBackendSsl30, &out.EnableBackendSsl30
		*out = new(bool)
		**out = **in
	}
	if in.EnableBackendTls10 != nil {
		in, out := &in.EnableBackendTls10, &out.EnableBackendTls10
		*out = new(bool)
		**out = **in
	}
	if in.EnableBackendTls11 != nil {
		in, out := &in.EnableBackendTls11, &out.EnableBackendTls11
		*out = new(bool)
		**out = **in
	}
	if in.EnableFrontendSsl30 != nil {
		in, out := &in.EnableFrontendSsl30, &out.EnableFrontendSsl30
		*out = new(bool)
		**out = **in
	}
	if in.EnableFrontendTls10 != nil {
		in, out := &in.EnableFrontendTls10, &out.EnableFrontendTls10
		*out = new(bool)
		**out = **in
	}
	if in.EnableFrontendTls11 != nil {
		in, out := &in.EnableFrontendTls11, &out.EnableFrontendTls11
		*out = new(bool)
		**out = **in
	}
	if in.TLSEcdheEcdsaWithAes128CbcShaCiphersEnabled != nil {
		in, out := &in.TLSEcdheEcdsaWithAes128CbcShaCiphersEnabled, &out.TLSEcdheEcdsaWithAes128CbcShaCiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSEcdheEcdsaWithAes256CbcShaCiphersEnabled != nil {
		in, out := &in.TLSEcdheEcdsaWithAes256CbcShaCiphersEnabled, &out.TLSEcdheEcdsaWithAes256CbcShaCiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSEcdheRsaWithAes128CbcShaCiphersEnabled != nil {
		in, out := &in.TLSEcdheRsaWithAes128CbcShaCiphersEnabled, &out.TLSEcdheRsaWithAes128CbcShaCiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSEcdheRsaWithAes256CbcShaCiphersEnabled != nil {
		in, out := &in.TLSEcdheRsaWithAes256CbcShaCiphersEnabled, &out.TLSEcdheRsaWithAes256CbcShaCiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSRsaWithAes128CbcSha256CiphersEnabled != nil {
		in, out := &in.TLSRsaWithAes128CbcSha256CiphersEnabled, &out.TLSRsaWithAes128CbcSha256CiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSRsaWithAes128CbcShaCiphersEnabled != nil {
		in, out := &in.TLSRsaWithAes128CbcShaCiphersEnabled, &out.TLSRsaWithAes128CbcShaCiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSRsaWithAes128GCMSha256CiphersEnabled != nil {
		in, out := &in.TLSRsaWithAes128GCMSha256CiphersEnabled, &out.TLSRsaWithAes128GCMSha256CiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSRsaWithAes256CbcSha256CiphersEnabled != nil {
		in, out := &in.TLSRsaWithAes256CbcSha256CiphersEnabled, &out.TLSRsaWithAes256CbcSha256CiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TLSRsaWithAes256CbcShaCiphersEnabled != nil {
		in, out := &in.TLSRsaWithAes256CbcShaCiphersEnabled, &out.TLSRsaWithAes256CbcShaCiphersEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TripleDesCiphersEnabled != nil {
		in, out := &in.TripleDesCiphersEnabled, &out.TripleDesCiphersEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityParameters.
func (in *SecurityParameters) DeepCopy() *SecurityParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignInObservation) DeepCopyInto(out *SignInObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignInObservation.
func (in *SignInObservation) DeepCopy() *SignInObservation {
	if in == nil {
		return nil
	}
	out := new(SignInObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignInParameters) DeepCopyInto(out *SignInParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignInParameters.
func (in *SignInParameters) DeepCopy() *SignInParameters {
	if in == nil {
		return nil
	}
	out := new(SignInParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignUpObservation) DeepCopyInto(out *SignUpObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignUpObservation.
func (in *SignUpObservation) DeepCopy() *SignUpObservation {
	if in == nil {
		return nil
	}
	out := new(SignUpObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignUpParameters) DeepCopyInto(out *SignUpParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.TermsOfService != nil {
		in, out := &in.TermsOfService, &out.TermsOfService
		*out = make([]TermsOfServiceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignUpParameters.
func (in *SignUpParameters) DeepCopy() *SignUpParameters {
	if in == nil {
		return nil
	}
	out := new(SignUpParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TenantAccessObservation) DeepCopyInto(out *TenantAccessObservation) {
	*out = *in
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TenantAccessObservation.
func (in *TenantAccessObservation) DeepCopy() *TenantAccessObservation {
	if in == nil {
		return nil
	}
	out := new(TenantAccessObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TenantAccessParameters) DeepCopyInto(out *TenantAccessParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TenantAccessParameters.
func (in *TenantAccessParameters) DeepCopy() *TenantAccessParameters {
	if in == nil {
		return nil
	}
	out := new(TenantAccessParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TermsOfServiceObservation) DeepCopyInto(out *TermsOfServiceObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TermsOfServiceObservation.
func (in *TermsOfServiceObservation) DeepCopy() *TermsOfServiceObservation {
	if in == nil {
		return nil
	}
	out := new(TermsOfServiceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TermsOfServiceParameters) DeepCopyInto(out *TermsOfServiceParameters) {
	*out = *in
	if in.ConsentRequired != nil {
		in, out := &in.ConsentRequired, &out.ConsentRequired
		*out = new(bool)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Text != nil {
		in, out := &in.Text, &out.Text
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TermsOfServiceParameters.
func (in *TermsOfServiceParameters) DeepCopy() *TermsOfServiceParameters {
	if in == nil {
		return nil
	}
	out := new(TermsOfServiceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkConfigurationObservation) DeepCopyInto(out *VirtualNetworkConfigurationObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkConfigurationObservation.
func (in *VirtualNetworkConfigurationObservation) DeepCopy() *VirtualNetworkConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualNetworkConfigurationParameters) DeepCopyInto(out *VirtualNetworkConfigurationParameters) {
	*out = *in
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualNetworkConfigurationParameters.
func (in *VirtualNetworkConfigurationParameters) DeepCopy() *VirtualNetworkConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualNetworkConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}
